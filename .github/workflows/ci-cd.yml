name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: storisbro_main_db
          POSTGRES_USER: main_login_db
          POSTGRES_PASSWORD: yIuHxg9qBU55
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    # env:
    #   DATABASE_URL: postgres://user:password@localhost:5432/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r storisbro/requirements_ci_cd.txt

      - name: Run backend tests
        run: |
          python manage.py migrate
          python manage.py test
        working-directory: storisbro

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install frontend dependencies
        run: npm install
        working-directory: frontend

      - name: Run frontend build
        run: npm run build
        working-directory: frontend

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_HOST }}
          DEPLOY_PATH: /var/www/build
        run: |
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd $DEPLOY_PATH && git pull && source venv/bin/activate && pip install -r backend/requirements.txt && python manage.py migrate && npm install && npm run build && sudo systemctl restart gunicorn && sudo systemctl restart nginx"

